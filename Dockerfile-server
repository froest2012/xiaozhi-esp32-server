# 第一阶段：构建Python依赖
FROM python:3.10-slim AS builder

WORKDIR /app

# 配置pip使用国内镜像源（阿里云）并设置超时和重试
RUN pip config set global.index-url https://mirrors.aliyun.com/pypi/simple/ && \
    pip config set global.trusted-host mirrors.aliyun.com && \
    pip config set global.timeout 120 && \
    pip config set install.retries 5

COPY main/xiaozhi-server/requirements.txt .

# 安装Python依赖，使用并行下载
RUN pip install --no-cache-dir --upgrade pip setuptools wheel && \
    pip install --no-cache-dir -r requirements.txt --default-timeout=120 --retries 5

# 第二阶段：生产镜像
FROM python:3.10-slim

WORKDIR /opt/xiaozhi-esp32-server

# 安装系统依赖
# 使用阿里云镜像源并添加并行下载配置
RUN rm -rf /etc/apt/sources.list.d/* && \
    # 2. 重建 sources.list，仅包含阿里云源
    echo "deb http://mirrors.aliyun.com/debian bookworm main contrib non-free" > /etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/debian bookworm-updates main contrib non-free" >> /etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/debian bookworm-backports main contrib non-free" >> /etc/apt/sources.list && \
    echo "deb http://mirrors.aliyun.com/debian-security bookworm-security main contrib non-free" >> /etc/apt/sources.list && \
    # 3. 核心配置：仅允许阿里云源，拒绝所有其他域名
    echo 'Acquire::http::AllowRedirect "false";' > /etc/apt/apt.conf.d/99no-redirect && \
    echo 'Acquire::http::Dl-Limit "0";' > /etc/apt/apt.conf.d/99no-limit && \
    echo 'Acquire::http::Pipeline-Depth "0";' > /etc/apt/apt.conf.d/99pipeline && \
    # 明确阻止官方源域名（通过 APT 的域名过滤机制）
    echo 'Acquire::http::Host::deb.debian.org "deny";' > /etc/apt/apt.conf.d/99block-debian && \
    echo 'Acquire::http::Host::security.debian.org "deny";' >> /etc/apt/apt.conf.d/99block-debian && \
    # 4. 并行下载和重试配置
    echo 'Acquire::Parallel "6";' > /etc/apt/apt.conf.d/99parallel && \
    echo 'APT::Acquire::Retries "5";' > /etc/apt/apt.conf.d/80retries && \
    # 5. 更新并安装软件包
    apt-get update && \
    apt-get install -y --no-install-recommends libopus0 ffmpeg && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 从构建阶段复制Python包和前端构建产物
COPY --from=builder /usr/local/lib/python3.10/site-packages /usr/local/lib/python3.10/site-packages
COPY --from=builder /usr/local/bin/mcp-proxy /usr/local/bin/mcp-proxy

# 复制应用代码
COPY main/xiaozhi-server .

# 启动应用
CMD ["python", "app.py"]